{"version":3,"file":"static/js/290.08291614.chunk.js","mappings":"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","sources":["../node_modules/container-query-polyfill/cqfill.js"],"sourcesContent":["// src/engine.ts\nvar Comparator;\n(function(Comparator2) {\n  Comparator2[Comparator2[\"LESS_THAN\"] = 0] = \"LESS_THAN\";\n  Comparator2[Comparator2[\"LESS_OR_EQUAL\"] = 1] = \"LESS_OR_EQUAL\";\n  Comparator2[Comparator2[\"GREATER_THAN\"] = 2] = \"GREATER_THAN\";\n  Comparator2[Comparator2[\"GREATER_OR_EQUAL\"] = 3] = \"GREATER_OR_EQUAL\";\n})(Comparator || (Comparator = {}));\nvar ContainerConditionType;\n(function(ContainerConditionType2) {\n  ContainerConditionType2[ContainerConditionType2[\"SizeQuery\"] = 0] = \"SizeQuery\";\n  ContainerConditionType2[ContainerConditionType2[\"ContainerConditionConjunction\"] = 1] = \"ContainerConditionConjunction\";\n  ContainerConditionType2[ContainerConditionType2[\"ContainerConditionDisjunction\"] = 2] = \"ContainerConditionDisjunction\";\n  ContainerConditionType2[ContainerConditionType2[\"ContainerConditionNegation\"] = 3] = \"ContainerConditionNegation\";\n})(ContainerConditionType || (ContainerConditionType = {}));\nfunction uid() {\n  return Array.from({ length: 16 }, () => Math.floor(Math.random() * 256).toString(16)).join(\"\");\n}\nfunction translateToLogicalProp(feature) {\n  switch (feature.toLowerCase()) {\n    case \"inlinesize\":\n      return \"inlineSize\";\n    case \"blocksize\":\n      return \"blockSize\";\n    case \"width\":\n      return \"inlineSize\";\n    case \"height\":\n      return \"blockSize\";\n    default:\n      throw Error(`Unknown feature name ${feature} in container query`);\n  }\n}\nfunction isSizeQueryFulfilled(condition, borderBox) {\n  const value = borderBox[translateToLogicalProp(condition.feature)];\n  switch (condition.comparator) {\n    case 3:\n      return value >= condition.threshold;\n    case 2:\n      return value > condition.threshold;\n    case 1:\n      return value <= condition.threshold;\n    case 0:\n      return value < condition.threshold;\n  }\n}\nfunction isQueryFullfilled_internal(condition, borderBox) {\n  switch (condition.type) {\n    case 1:\n      return isQueryFullfilled_internal(condition.left, borderBox) && isQueryFullfilled_internal(condition.right, borderBox);\n    case 2:\n      return isQueryFullfilled_internal(condition.left, borderBox) || isQueryFullfilled_internal(condition.right, borderBox);\n    case 3:\n      return !isQueryFullfilled_internal(condition.right, borderBox);\n    case 0:\n      return isSizeQueryFulfilled(condition, borderBox);\n    default:\n      throw Error(\"wtf?\");\n  }\n}\nfunction isQueryFullfilled(condition, entry) {\n  let borderBox;\n  if (\"borderBoxSize\" in entry) {\n    borderBox = entry.borderBoxSize?.[0] ?? entry.borderBoxSize;\n  } else {\n    const computed = getComputedStyle(entry.target);\n    borderBox = {\n      blockSize: entry.contentRect.height,\n      inlineSize: entry.contentRect.width\n    };\n    borderBox.blockSize += parseInt(computed.paddingBlockStart.slice(0, -2)) + parseInt(computed.paddingBlockEnd.slice(0, -2));\n    borderBox.inlineSize += parseInt(computed.paddingInlineStart.slice(0, -2)) + parseInt(computed.paddingInlineEnd.slice(0, -2));\n  }\n  return isQueryFullfilled_internal(condition, borderBox);\n}\nfunction findParentContainer(el, name) {\n  while (el) {\n    el = el.parentElement;\n    if (!containerNames.has(el))\n      continue;\n    if (name) {\n      const containerName = containerNames.get(el);\n      if (!containerName.includes(name))\n        continue;\n    }\n    return el;\n  }\n  return null;\n}\nvar containerNames = new WeakMap();\nfunction registerContainer(el, name) {\n  containerRO.observe(el);\n  if (!containerNames.has(el)) {\n    containerNames.set(el, []);\n  }\n  containerNames.get(el).push(name);\n}\nvar queries = [];\nfunction registerContainerQuery(cqd) {\n  queries.push(cqd);\n}\nvar containerRO = new ResizeObserver((entries) => {\n  const changedContainers = new Map(entries.map((entry) => [entry.target, entry]));\n  for (const query of queries) {\n    for (const { selector } of query.rules) {\n      const els = document.querySelectorAll(selector);\n      for (const el of els) {\n        const container = findParentContainer(el, query.name);\n        if (!container)\n          continue;\n        if (!changedContainers.has(container))\n          continue;\n        const entry = changedContainers.get(container);\n        el.classList.toggle(query.className, isQueryFullfilled(query.condition, entry));\n      }\n    }\n  }\n});\nvar watchedContainerSelectors = [];\nvar containerMO = new MutationObserver((entries) => {\n  for (const entry of entries) {\n    for (const node of entry.removedNodes) {\n      if (!(node instanceof HTMLElement))\n        continue;\n      containerRO.unobserve(node);\n    }\n    for (const node of entry.addedNodes) {\n      if (!(node instanceof HTMLElement))\n        continue;\n      for (const watchedContainerSelector of watchedContainerSelectors) {\n        if (node.matches(watchedContainerSelector.selector)) {\n          registerContainer(node, watchedContainerSelector.name);\n        }\n        for (const container of node.querySelectorAll(watchedContainerSelector.selector)) {\n          registerContainer(container, watchedContainerSelector.name);\n        }\n      }\n    }\n  }\n});\ncontainerMO.observe(document.documentElement, {\n  childList: true,\n  subtree: true\n});\nfunction transpileStyleSheet(sheetSrc, srcUrl) {\n  const p = {\n    sheetSrc,\n    index: 0,\n    name: srcUrl\n  };\n  while (p.index < p.sheetSrc.length) {\n    eatWhitespace(p);\n    if (p.index >= p.sheetSrc.length)\n      break;\n    if (lookAhead(\"/*\", p)) {\n      while (lookAhead(\"/*\", p)) {\n        eatComment(p);\n        eatWhitespace(p);\n      }\n      continue;\n    }\n    if (lookAhead(\"@container\", p)) {\n      const { query, startIndex, endIndex } = parseContainerQuery(p);\n      const replacement = stringifyContainerQuery(query);\n      replacePart(startIndex, endIndex, replacement, p);\n      registerContainerQuery(query);\n    } else {\n      const rule = parseQualifiedRule(p);\n      if (!rule)\n        continue;\n      handleContainerProps(rule, p);\n    }\n  }\n  if (!srcUrl) {\n    return p.sheetSrc;\n  }\n  p.sheetSrc = p.sheetSrc.replace(/url\\([\"']*([^)\"']+)[\"']*\\)/g, (match, url) => {\n    return `url(${new URL(url, srcUrl)})`;\n  });\n  return p.sheetSrc;\n}\nfunction handleContainerProps(rule, p) {\n  const hasLongHand = rule.block.contents.includes(\"container-\");\n  const hasShortHand = rule.block.contents.includes(\"container:\");\n  if (!hasLongHand && !hasShortHand)\n    return;\n  let containerName, containerType;\n  if (hasLongHand) {\n    containerName = /container-name\\s*:([^;}]+)/.exec(rule.block.contents)?.[1].trim();\n    rule.block.contents = rule.block.contents.replace(\"container-type\", \"contain\");\n  }\n  if (hasShortHand) {\n    const containerShorthand = /container\\s*:([^;}]+)/.exec(rule.block.contents)?.[1];\n    [containerType, containerName] = containerShorthand.split(\"/\").map((v) => v.trim());\n    rule.block.contents = rule.block.contents.replace(/container: ([^;}]+)/, `contain: ${containerType};`);\n  }\n  if (!containerName) {\n    containerName = uid();\n  }\n  replacePart(rule.block.startIndex, rule.block.endIndex, rule.block.contents, p);\n  watchedContainerSelectors.push({\n    name: containerName,\n    selector: rule.selector\n  });\n  for (const el of document.querySelectorAll(rule.selector)) {\n    registerContainer(el, containerName);\n  }\n}\nfunction replacePart(start, end, replacement, p) {\n  p.sheetSrc = p.sheetSrc.slice(0, start) + replacement + p.sheetSrc.slice(end);\n  if (p.index >= end) {\n    const delta = p.index - end;\n    p.index = start + replacement.length + delta;\n  }\n}\nfunction eatComment(p) {\n  assertString(p, \"/*\");\n  eatUntil(\"*/\", p);\n  assertString(p, \"*/\");\n}\nfunction advance(p) {\n  p.index++;\n  if (p.index > p.sheetSrc.length) {\n    throw parseError(p, \"Advanced beyond the end\");\n  }\n}\nfunction eatUntil(s, p) {\n  const startIndex = p.index;\n  while (!lookAhead(s, p)) {\n    advance(p);\n  }\n  return p.sheetSrc.slice(startIndex, p.index);\n}\nfunction lookAhead(s, p) {\n  return p.sheetSrc.substr(p.index, s.length) == s;\n}\nfunction parseSelector(p) {\n  let startIndex = p.index;\n  eatUntil(\"{\", p);\n  if (startIndex === p.index) {\n    throw Error(\"Empty selector\");\n  }\n  return p.sheetSrc.slice(startIndex, p.index);\n}\nfunction parseQualifiedRule(p) {\n  const startIndex = p.index;\n  const selector = parseSelector(p);\n  if (!selector)\n    return;\n  const block = eatBlock(p);\n  const endIndex = p.index;\n  return {\n    selector,\n    block,\n    startIndex,\n    endIndex\n  };\n}\nfunction fileName(p) {\n  if (p.name) {\n    return p.name;\n  }\n  return \"<anonymous file>\";\n}\nfunction parseError(p, msg) {\n  return Error(`(${fileName(p)}): ${msg}`);\n}\nfunction assertString(p, s) {\n  if (p.sheetSrc.substr(p.index, s.length) != s) {\n    throw parseError(p, `Did not find expected sequence ${s}`);\n  }\n  p.index += s.length;\n}\nvar whitespaceMatcher = /\\s*/g;\nfunction eatWhitespace(p) {\n  whitespaceMatcher.lastIndex = p.index;\n  const match = whitespaceMatcher.exec(p.sheetSrc);\n  if (match) {\n    p.index += match[0].length;\n  }\n}\nfunction peek(p) {\n  return p.sheetSrc[p.index];\n}\nvar identMatcher = /[\\w\\\\\\@_-]+/g;\nfunction parseIdentifier(p) {\n  identMatcher.lastIndex = p.index;\n  const match = identMatcher.exec(p.sheetSrc);\n  if (!match) {\n    throw parseError(p, \"Expected an identifier\");\n  }\n  p.index += match[0].length;\n  return match[0];\n}\nfunction parseMeasurementName(p) {\n  return parseIdentifier(p).toLowerCase();\n}\nvar numberMatcher = /[0-9.]*/g;\nfunction parseThreshold(p) {\n  numberMatcher.lastIndex = p.index;\n  const match = numberMatcher.exec(p.sheetSrc);\n  if (!match) {\n    throw parseError(p, \"Expected a number\");\n  }\n  p.index += match[0].length;\n  assertString(p, \"px\");\n  const value = parseFloat(match[0]);\n  if (Number.isNaN(value)) {\n    throw parseError(p, `${match[0]} is not a valid number`);\n  }\n  return value;\n}\nfunction eatBlock(p) {\n  const startIndex = p.index;\n  assertString(p, \"{\");\n  let level = 1;\n  while (level != 0) {\n    if (p.sheetSrc[p.index] === \"{\") {\n      level++;\n    } else if (p.sheetSrc[p.index] === \"}\") {\n      level--;\n    }\n    advance(p);\n  }\n  const endIndex = p.index;\n  const contents = p.sheetSrc.slice(startIndex, endIndex);\n  return { startIndex, endIndex, contents };\n}\nfunction parseLegacySizeQuery(p) {\n  const measurement = parseMeasurementName(p);\n  eatWhitespace(p);\n  assertString(p, \":\");\n  eatWhitespace(p);\n  const threshold = parseThreshold(p);\n  eatWhitespace(p);\n  assertString(p, \")\");\n  eatWhitespace(p);\n  let comparator;\n  if (measurement.startsWith(\"min-\")) {\n    comparator = 3;\n  } else if (measurement.startsWith(\"max-\")) {\n    comparator = 1;\n  } else {\n    throw Error(`Unknown legacy container query ${measurement}`);\n  }\n  return {\n    type: 0,\n    feature: translateToLogicalProp(measurement.slice(4)),\n    comparator,\n    threshold\n  };\n}\nfunction parseComparator(p) {\n  if (lookAhead(\">=\", p)) {\n    assertString(p, \">=\");\n    return 3;\n  }\n  if (lookAhead(\">\", p)) {\n    assertString(p, \">\");\n    return 2;\n  }\n  if (lookAhead(\"<=\", p)) {\n    assertString(p, \"<=\");\n    return 1;\n  }\n  if (lookAhead(\"<\", p)) {\n    assertString(p, \"<\");\n    return 0;\n  }\n  throw Error(`Unknown comparator`);\n}\nfunction parseSizeQuery(p) {\n  assertString(p, \"(\");\n  if (lookAhead(\"(\", p)) {\n    const cond = parseContainerCondition(p);\n    assertString(p, \")\");\n    return cond;\n  }\n  eatWhitespace(p);\n  if (lookAhead(\"min-\", p) || lookAhead(\"max-\", p)) {\n    return parseLegacySizeQuery(p);\n  }\n  const feature = parseIdentifier(p).toLowerCase();\n  eatWhitespace(p);\n  const comparator = parseComparator(p);\n  eatWhitespace(p);\n  const threshold = parseThreshold(p);\n  eatWhitespace(p);\n  assertString(p, \")\");\n  eatWhitespace(p);\n  return {\n    type: 0,\n    feature,\n    comparator,\n    threshold\n  };\n}\nfunction parseSizeOrStyleQuery(p) {\n  eatWhitespace(p);\n  if (lookAhead(\"(\", p))\n    return parseSizeQuery(p);\n  else if (lookAhead(\"size\", p)) {\n    assertString(p, \"size\");\n    eatWhitespace(p);\n    return parseSizeQuery(p);\n  } else if (lookAhead(\"style\", p)) {\n    throw Error(`Style query not implement yet`);\n  } else {\n    throw Error(`Unknown container query type`);\n  }\n}\nfunction parseNegatedContainerCondition(p) {\n  if (lookAhead(\"not\", p)) {\n    assertString(p, \"not\");\n    eatWhitespace(p);\n    return {\n      type: 3,\n      right: parseSizeOrStyleQuery(p)\n    };\n  }\n  return parseSizeOrStyleQuery(p);\n}\nfunction parseContainerCondition(p) {\n  let left = parseNegatedContainerCondition(p);\n  while (true) {\n    if (lookAhead(\"and\", p)) {\n      assertString(p, \"and\");\n      eatWhitespace(p);\n      const right = parseNegatedContainerCondition(p);\n      eatWhitespace(p);\n      left = {\n        type: 1,\n        left,\n        right\n      };\n    } else if (lookAhead(\"or\", p)) {\n      assertString(p, \"or\");\n      eatWhitespace(p);\n      const right = parseNegatedContainerCondition(p);\n      eatWhitespace(p);\n      left = {\n        type: 2,\n        left,\n        right\n      };\n    } else {\n      break;\n    }\n  }\n  return left;\n}\nfunction parseContainerQuery(p) {\n  const startIndex = p.index;\n  assertString(p, \"@container\");\n  eatWhitespace(p);\n  let name = \"\";\n  if (peek(p) !== \"(\" && !lookAhead(\"size\", p) && !lookAhead(\"style\", p)) {\n    name = parseIdentifier(p);\n    eatWhitespace(p);\n  }\n  const condition = parseContainerCondition(p);\n  eatWhitespace(p);\n  assertString(p, \"{\");\n  eatWhitespace(p);\n  const rules = [];\n  while (peek(p) !== \"}\") {\n    rules.push(parseQualifiedRule(p));\n    eatWhitespace(p);\n  }\n  assertString(p, \"}\");\n  const endIndex = p.index;\n  eatWhitespace(p);\n  const className = `cq_${uid()}`;\n  return {\n    query: {\n      condition,\n      className,\n      name,\n      rules\n    },\n    startIndex,\n    endIndex\n  };\n}\nfunction stringifyContainerQuery(query) {\n  return query.rules.map((rule) => `:is(${rule.selector}).${query.className} ${rule.block.contents}`).join(\"\\n\");\n}\n\n// src/cqfill.ts\nfunction init() {\n  const sheetObserver = new MutationObserver((entries) => {\n    for (const entry of entries) {\n      for (const addedNode of entry.addedNodes) {\n        if (addedNode instanceof HTMLStyleElement) {\n          handleStyleTag(addedNode);\n        }\n        if (addedNode instanceof HTMLLinkElement) {\n          handleLinkedStylesheet(addedNode);\n        }\n      }\n    }\n  });\n  sheetObserver.observe(document.documentElement, {\n    childList: true,\n    subtree: true\n  });\n  function handleStyleTag(el) {\n    if (el.innerHTML.trim().length === 0)\n      return;\n    const newSrc = transpileStyleSheet(el.innerHTML);\n    el.innerHTML = newSrc;\n  }\n  async function handleLinkedStylesheet(el) {\n    if (el.rel !== \"stylesheet\")\n      return;\n    const srcUrl = new URL(el.href, document.baseURI);\n    if (srcUrl.origin !== location.origin)\n      return;\n    const src = await fetch(srcUrl.toString()).then((r) => r.text());\n    const newSrc = transpileStyleSheet(src, srcUrl.toString());\n    const blob = new Blob([newSrc], { type: \"text/css\" });\n    el.href = URL.createObjectURL(blob);\n  }\n  document.querySelectorAll(\"style\").forEach((tag) => handleStyleTag(tag));\n  document.querySelectorAll(\"link\").forEach((tag) => handleLinkedStylesheet(tag));\n}\nvar supportsContainerQueries = \"container\" in document.documentElement.style;\nif (!supportsContainerQueries) {\n  init();\n}\nexport {\n  transpileStyleSheet\n};\n"],"names":["Comparator","Comparator2","ContainerConditionType","ContainerConditionType2","uid","Array","from","length","Math","floor","random","toString","join","translateToLogicalProp","feature","toLowerCase","Error","isQueryFullfilled_internal","condition","borderBox","type","left","right","value","comparator","threshold","isSizeQueryFulfilled","isQueryFullfilled","entry","borderBoxSize","computed","getComputedStyle","target","blockSize","contentRect","height","inlineSize","width","parseInt","paddingBlockStart","slice","paddingBlockEnd","paddingInlineStart","paddingInlineEnd","findParentContainer","el","name","parentElement","containerNames","has","get","includes","WeakMap","registerContainer","containerRO","observe","set","push","queries","ResizeObserver","entries","changedContainers","Map","map","query","rules","selector","els","document","querySelectorAll","container","classList","toggle","className","watchedContainerSelectors","transpileStyleSheet","sheetSrc","srcUrl","cqd","p","index","eatWhitespace","lookAhead","eatComment","parseContainerQuery","replacePart","startIndex","endIndex","stringifyContainerQuery","rule","parseQualifiedRule","handleContainerProps","replace","match","url","URL","hasLongHand","block","contents","hasShortHand","containerName","containerType","exec","trim","split","v","start","end","replacement","delta","assertString","eatUntil","advance","parseError","s","substr","parseSelector","level","eatBlock","msg","fileName","MutationObserver","removedNodes","node","HTMLElement","unobserve","addedNodes","watchedContainerSelector","matches","documentElement","childList","subtree","whitespaceMatcher","lastIndex","peek","identMatcher","parseIdentifier","numberMatcher","parseThreshold","parseFloat","Number","isNaN","parseLegacySizeQuery","measurement","parseMeasurementName","startsWith","parseSizeQuery","cond","parseContainerCondition","parseComparator","parseSizeOrStyleQuery","parseNegatedContainerCondition","style","handleStyleTag","innerHTML","newSrc","handleLinkedStylesheet","rel","href","baseURI","origin","location","fetch","then","r","text","src","blob","Blob","createObjectURL","addedNode","HTMLStyleElement","HTMLLinkElement","forEach","tag","init"],"sourceRoot":""}